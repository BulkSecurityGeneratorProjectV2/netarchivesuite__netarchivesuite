package dk.netarkivet.harvester.harvesting;

import java.io.File;
import java.io.InputStream;

import dk.netarkivet.common.exceptions.ArgumentNotValid;
import dk.netarkivet.harvester.datamodel.HeritrixTemplate;
import dk.netarkivet.harvester.datamodel.Job;


/**
 * This class encapsulates the information generated by Heritrix3 or delivered to Heritrix3 before a crawl.
 * FIXME unfinished class
 * @author svc
 *
 */
public class Heritrix3Files {

	private File crawlDir;
	private Long harvestID;
	private Long jobID;
	private File orderXML;
	private File indexDir;
	private String archiveFilePrefix;
	
	
	public static Heritrix3Files getH3HeritrixFiles(File crawldir, PersistentJobData harvestInfo) {
		Heritrix3Files files = new Heritrix3Files();
		files.setCrawldir(crawldir);
		files.setJobId(harvestInfo.getJobID());
		files.setArchivePrefix(harvestInfo.getHarvestFilenamePrefix());
		return files;
	}

	private void setArchivePrefix(String harvestFilenamePrefix) {
		this.archiveFilePrefix = harvestFilenamePrefix;
		
	}

	private void setJobId(Long jobID) {
		this.jobID = jobID;
	}

	public static Heritrix3Files getH3HeritrixFiles(File crawldir, Job job) { 
		Heritrix3Files files = new Heritrix3Files();
		files.setCrawldir(crawldir);
		files.setJobId(job.getJobID());
		files.setArchivePrefix(job.getHarvestFilenamePrefix());
		return files;
	}
	
	private void setCrawldir(File crawldir) {
		this.crawlDir = crawldir;
	}

	private Heritrix3Files(){
	}

	public File getCrawlDir() {
		return this.crawlDir;
	}

	public void writeSeedsTxt(String seedListAsString) {
		//FIXME
	}

	public void setIndexDir(File indexDir) {
		ArgumentNotValid.checkExistsDirectory(indexDir, "File indexDir");
		this.indexDir = indexDir;;
		
	}
	public void writeOrderXml(HeritrixTemplate orderXMLdoc) {
		// FIXME change destination file to something meaningful 
		File destination = new File(crawlDir, "crawler-beans.cxml");
		orderXMLdoc.writeToFile(destination);
		this.orderXML = destination;
		
	}

	public File getProgressStatisticsLog() {
		// TODO probably not the correct path
		return new File(crawlDir, "progress-statistics.log");
	}

	public Long getJobID() {
		return this.jobID;
	}

	public File getOrderXmlFile() {
		return this.orderXML; // Is this correct
	}
	public File getSeedsTxtFile() {
		// TODO probably not the correct path
		return new File(crawlDir, "seeds.txt");
	}

	public Long getHarvestID() {
		return this.harvestID;
	}

	public String getArchiveFilePrefix() {
		return this.archiveFilePrefix;
	}	

	public File getIndexDir() {
		return this.indexDir;
	}

	public File getCrawlLog() {
		return new File(crawlDir, "crawl.log");
	}
	
	////////////////////// UNIMPLEMENTED METHODS ///////////////////////////////
	
	// FIXME Handling of the recoverLog is postponed

	public boolean writeRecoverBackupfile(InputStream data) {
		// TODO Auto-generated method stub
		return false;
	}

	public File getRecoverBackupGzFile() {
		// TODO Auto-generated method stub
		return null;
	}

	// FIXME cleanup-code is postponed
	
	public void deleteFinalLogs() {
		// TODO Auto-generated method stub
	}

	public void cleanUpAfterHarvest(File file) {
		// TODO Auto-generated method stub
		
	}
	// FIXME this method is postponed
	public File getHeritrixOutput() {
		// TODO Auto-generated method stub
		return null;
	}
	
	
	
}
